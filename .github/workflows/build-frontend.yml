name: Deploy MyGroup App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 3. Build backend
      - name: Build backend
        run: npm run build:server   # generates dist/index.js

      # 4. Build frontend
      - name: Build frontend
        run: npm run build:client   # generates dist/public/

      # 5. Upload backend dist
      - name: Upload backend dist
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: dist/index.js
          if-no-files-found: error

      # 6. Upload frontend dist
      - name: Upload frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist/public
          if-no-files-found: error

      # 7. Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            dist/index.js
            dist/public/*
          target: /home/ubuntu/MyGroupFullStak/

      # 8. Restart PM2 on EC2
      - name: SSH to EC2 and restart app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/MyGroupFullStak

            # Restart PM2 with correct app name
            pm2 restart mygroup || pm2 start dist/index.js --name "mygroup" --env production

            # Move frontend dist to Nginx root
            sudo rm -rf /var/www/html/*
            sudo cp -r /home/ubuntu/MyGroupFullStak/dist/public/* /var/www/html/

            # Set proper permissions
            sudo chown -R www-data:www-data /var/www/html
            sudo chmod -R 755 /var/www/html

            # Reload Nginx
            sudo nginx -s reload

